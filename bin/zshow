if [ $# -lt 1 ]; then
	echo "Usage: zshow logfile [starttime] [endtime]"
	exit
fi

stime=$2
if [ -z "$stime" ];then
	stime="00"
fi
etime=$3
if [ -z "$etime" ];then
	etime="99"
fi

cat $1 | awk -v stime="$stime" -v etime="$etime" -F';' 'BEGIN{cnt=0;ln=0;}{

	if(NR==4){
		match($0,"-D ([^ ]*)",d);
		dsks=d[1];
	}
	
	if(NR==6){
		nets="";
		for(i=1;i<=NF;i++){
			if(match($i,"net/([0-9a-zA-Z]+)",neti)){
				nets=nets","neti[1];
			}
		}
		nets=substr(nets,2);
	}
	
	if(NR<=10)next;
	
	#To filter with time range
	if($1 < stime)next;
	if($1 > etime)exit;
	
	ln++;
	
	if(!cnt)cnt = length($NF)>0 ? NF : NF-1; # skip the last noop(sometimes its not noop... theres a bug)
	for(i=2;i<=cnt;i++){ #skip the 1st time
		cur[i-1]=$i;
		avg[i-1]+=$i;
	}
	
	
	print "\n,t****************************************************************";
	
	print ",t\t@"$1;
	base=1;
	printf ",m0\t#MEM:\tused\tbuff\tcach\tfree\n,m1\t\t";
	for(i=0;i<4;i++)printf("%dM\t",cur[base+i]/1024/1024);	
	printf "\n\n";
	
	base+=4;
	split(nets,n,",");
	printf ",n0\t#NET:\t"
	for(i=1;i<=length(n);i++){if(i>1)printf "\t";printf n[i]"(in\tout)";}
	printf "\n,n1\t\t";
	for(i=0;i<length(n)*2;i++)printf("%.2fM\t",cur[base+i]/1024/1024);
	printf "\n\n";
	
	base+=length(n)*2;
	print ",d00\t#DSK:\tr\tw\tr/s\tw/s\trqsz\tutil";
	print ",d00--------------------------------------------------------";
	split(dsks,h,",");
	for(i=0;i<length(h);i++){
		printf(",d%02d\t%s:\t",i+1,h[i+1]);
		printf("%.2fM\t%.2fM\t%.1f\t%.1f\t%.1f\t%d\n", cur[base+2*i]/1024/1024,cur[base+2*i+1]/1024/1024,cur[base+2*length(h)+2*i],cur[base+2*length(h)+2*i+1],cur[base+4*length(h)+i],cur[base+5*length(h)+i]);	
		t1+=cur[base+2*i]/1024/1024;t2+=cur[base+2*i+1]/1024/1024;t3+=cur[base+2*length(h)+2*i];t4+=cur[base+2*length(h)+2*i+1];t5+=cur[base+4*length(h)+i];t6+=cur[base+5*length(h)+i];		
	}
	printf(",dd\tALL:\t%.2fM\t%.2fM\t%.1f\t%.1f\t%.1f\t%d",t1,t2,t3/length(h),t4/length(h),t5/length(h),t6/length(h));
	t1=t2=t3=t4=t5=t6=0;
	printf "\n\n";
	
	base+=length(h)*6;
	print ",c00\tusr\tsys\tidl\twai\thiq\tsiq\tstl";
	printf ",c00--------------------------------------------------------";
	for(i=base;i<=length(cur);i++){
		if((i-base)%7 == 0)printf("\n,c%02d",(i-base)/7+1);
		printf( "\t%d",cur[i]);
		tt[(i-base)%7]+=cur[i];
	}
	printf("\n,cc");
	for(j=0;j<7;j++){printf("\t%d",tt[j]/((i-base)/7));tt[j]=0;}

	
	
	
	}END{
		if(!ln)exit;
	
	 #mem--net--dsk----cpu
	 # 4-2*nets-6*dsks-7*n	n=(left/7)
	 # xx_dsks = (band:2 * dsks) + (tps:2 * dsks) + (rq:1 * dsks) + (util:1 * dsks)
		
	for(k in avg)avg[k] /= ln;

	print "\n\n\n,t**********************[SUMMARY]******************************";
	
	base=1;
	printf ",m0\t#MEM:\tused\tbuff\tcach\tfree\n,m1\t\t";
	for(i=0;i<4;i++)printf("%dM\t",avg[base+i]/1024/1024);	
	printf "\n\n";
	
	base+=4;
	split(nets,n,",");
	printf ",n0\t#NET:\t"
	for(i=1;i<=length(n);i++){if(i>1)printf "\t";printf n[i]"(in\tout)";}
	printf "\n,n1\t\t";
	for(i=0;i<length(n)*2;i++)printf("%.2fM\t",avg[base+i]/1024/1024);	
	printf "\n\n";
	
	base+=length(n)*2;
	print ",d00\t#DSK:\tr\tw\tr/s\tw/s\trqsz\tutil";
	print ",d00---------------------------------------------------------";
	split(dsks,h,",");
	for(i=0;i<length(h);i++){
		printf(",d%02d\t%s:\t",i+1,h[i+1]);
		printf("%.2fM\t%.2fM\t%.1f\t%.1f\t%.1f\t%d\n", avg[base+2*i]/1024/1024,avg[base+2*i+1]/1024/1024,avg[base+2*length(h)+2*i],avg[base+2*length(h)+2*i+1],avg[base+4*length(h)+i],avg[base+5*length(h)+i]);
		t1+=avg[base+2*i]/1024/1024;t2+=avg[base+2*i+1]/1024/1024;t3+=avg[base+2*length(h)+2*i];t4+=avg[base+2*length(h)+2*i+1];t5+=avg[base+4*length(h)+i];t6+=avg[base+5*length(h)+i];		
	}
	printf(",dd\tALL:\t%.2fM\t%.2fM\t%.1f\t%.1f\t%.1f\t%d",t1,t2,t3/length(h),t4/length(h),t5/length(h),t6/length(h));
	printf "\n\n";
	
	base+=length(h)*6;
	print ",c00\tusr\tsys\tidl\twai\thiq\tsiq\tstl";
	printf ",c00-------------------------------------------------------";	
	for(i=base;i<=length(avg);i++){
		if((i-base)%7 == 0)printf("\n,c%02d",(i-base)/7+1);
		printf( "\t%d",avg[i]);		
		tt[(i-base)%7]+=avg[i];
	}
	printf("\n,cc");
	for(j=0;j<7;j++)printf("\t%d",tt[j]/((i-base)/7));
	
	print "\n****************************************************************";
			
}'







